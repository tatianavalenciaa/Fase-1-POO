package formularios;

import daos.CdDao;
import daos.DvdDao;
import daos.LibroDao;
import daos.MaterialDao;
import daos.ParametroSistemaDao;
import daos.PrestamoDao;
import daos.RevistaDao;
import daos.UsuarioDao;
import entidades.Cd;
import entidades.Dvd;
import entidades.Libro;
import entidades.Material;
import entidades.ParametroSistema;
import entidades.Prestamo;
import entidades.Revista;
import entidades.Usuario;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import utilidades.Utilidades;

public class PrestamoForm extends javax.swing.JInternalFrame {

    private UsuarioDao usuarioDao;
    private ParametroSistemaDao parametroSistemaDao;
    private PrestamoDao prestamoDao;
    private MaterialDao materialDao;
    private LibroDao libroDao;
    private RevistaDao revistaDao;
    private CdDao cdDao;
    private DvdDao dvdDao;
    
    public PrestamoForm() {
        initComponents();
        this.usuarioDao = new UsuarioDao();
        this.parametroSistemaDao = new ParametroSistemaDao();
        this.prestamoDao = new PrestamoDao();
        this.materialDao = new MaterialDao();
        this.libroDao = new LibroDao();
        this.revistaDao = new RevistaDao();
        this.cdDao = new CdDao();
        this.dvdDao = new DvdDao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        txtMora = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnPrestar = new javax.swing.JButton();
        lblMensaje = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dchFechaPrestamo = new com.toedter.calendar.JDateChooser();
        dchFechaDevolucion = new com.toedter.calendar.JDateChooser();
        lblEstado = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtCarnet = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        btnPagarMora = new javax.swing.JButton();
        btnDevolver = new javax.swing.JButton();

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Prestamo");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Carnet:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        txtMora.setEnabled(false);
        getContentPane().add(txtMora, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 230, -1));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, -1));

        btnPrestar.setText("Prestar");
        btnPrestar.setEnabled(false);
        btnPrestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrestarActionPerformed(evt);
            }
        });
        getContentPane().add(btnPrestar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 120, -1));

        lblMensaje.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMensaje.setText(" ");
        getContentPane().add(lblMensaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 394, -1));

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, -1, -1));

        jLabel8.setText("Fecha Prestamo:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        jLabel9.setText("Mora:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, -1));
        getContentPane().add(dchFechaPrestamo, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 245, -1));
        getContentPane().add(dchFechaDevolucion, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 245, -1));

        lblEstado.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEstado.setText(" ");
        getContentPane().add(lblEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 245, -1));

        jLabel10.setText("Fecha Devolucion:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));
        getContentPane().add(txtCarnet, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 83, -1));

        jLabel2.setText("Codigo Material:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));
        getContentPane().add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 83, -1));

        btnPagarMora.setText("Pagar Mora");
        btnPagarMora.setEnabled(false);
        btnPagarMora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarMoraActionPerformed(evt);
            }
        });
        getContentPane().add(btnPagarMora, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 120, -1));

        btnDevolver.setText("Devolver");
        btnDevolver.setEnabled(false);
        btnDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnDevolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 250, 110, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpiar() {
        txtCarnet.setText("");
        txtCodigo.setText("");
        dchFechaPrestamo.setDate(null);
        dchFechaDevolucion.setDate(null);
        txtMora.setText("");
        lblEstado.setText("");
        lblMensaje.setText("");
        btnPrestar.setEnabled(false);
        btnPagarMora.setEnabled(false);
        btnDevolver.setEnabled(false);
    }

    private Object materialExiste(String codigo) {
        
        Object objeto = null;
        
        try {
            if(codigo.startsWith("LIB")) {
                objeto = libroDao.obtenerLibro(codigo);
            } else if(codigo.startsWith("REV")) {
                objeto = revistaDao.obtenerRevista(codigo);
            } else if(codigo.startsWith("CD")) {
                objeto = cdDao.obtenerCd(codigo);
            } else if(codigo.startsWith("DVD")) {
                objeto = dvdDao.obtenerDvd(codigo);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        return objeto;
        
    }
    
    private boolean materialDisponible(Object object) {
        boolean disponible = false;
        
        if(object instanceof Libro libro) {
            disponible = libro.getUnidadesDisp() > 0;
        } else if(object instanceof Revista revista) {
            disponible = revista.getUnidadesDisp() > 0;
        } else if(object instanceof Cd cd) {
            disponible = cd.getUnidadesDisp() > 0;
        } else if(object instanceof Dvd dvd) {
            disponible = dvd.getUnidadesDisp() > 0;
        } 
        
        return disponible;
    }
    
    private void llenarFormulario(Prestamo prestamo, Double mora) {
            if (prestamo == null) {
                lblMensaje.setText("Registro no encontrado");
            } else {
                txtCodigo.setText(prestamo.getCodigo());
                dchFechaPrestamo.setDate(prestamo.getFechaPrestamo());
                dchFechaDevolucion.setDate(prestamo.getFechaDevolucion());
                txtMora.setText(String.valueOf(mora));
            }
    }
    
    private Prestamo obtenerDesdeFormulario() {
        Prestamo prestamo = null;
        try {
            Usuario usuario = usuarioDao.obtenerUsuarioXCarnet(txtCarnet.getText());
            Material material = materialDao.obtenerMaterial(txtCodigo.getText());
            prestamo = new Prestamo();
            prestamo.setCodigo(txtCodigo.getText());
            prestamo.setIdMaterial(material.getIdMaterial());
            prestamo.setIdUsuario(usuario.getIdUsuario());
            prestamo.setFechaPrestamo(dchFechaPrestamo.getDate());
            prestamo.setFechaDevolucion(dchFechaDevolucion.getDate());
        } catch (Exception e) {
            e.printStackTrace();
        }
        return prestamo;
    }
    
    private void modificarDisponibilidad(String codigo, Integer valor) {
        
        try {
            if(codigo.startsWith("LIB")) {
                Libro libro = libroDao.obtenerLibro(codigo);
                libro.setUnidadesDisp(libro.getUnidadesDisp() + valor);
                libroDao.modificarLibro(libro);
            } else if(codigo.startsWith("REV")) {
                Revista revista = revistaDao.obtenerRevista(codigo);
                revista.setUnidadesDisp(revista.getUnidadesDisp() + valor);
                revistaDao.modificarRevista(revista);
            } else if(codigo.startsWith("CD")) {
                Cd cd = cdDao.obtenerCd(codigo);
                cd.setUnidadesDisp(cd.getUnidadesDisp() + valor);
                cdDao.modificarCd(cd);
            } else if(codigo.startsWith("DVD")) {
                Dvd dvd = dvdDao.obtenerDvd(codigo);
                dvd.setUnidadesDisp(dvd.getUnidadesDisp() + valor);
                dvdDao.modificarDvd(dvd);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    
    private void btnPrestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrestarActionPerformed
        try {
            Prestamo prestamo = obtenerDesdeFormulario();
            prestamoDao.registrarPrestamo(prestamo);
            modificarDisponibilidad(prestamo.getCodigo(), -1);
            limpiar();
            lblMensaje.setText("Material prestado exitosamente!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPrestarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
        lblMensaje.setText("");
        String carnet = txtCarnet.getText();
        String codigo = txtCodigo.getText();

        try {
            
            // Validacion 1: Validar que tanto carnet como el codigo han sido ingresados
            
            if (carnet.isBlank() || codigo.isBlank()) {
                lblEstado.setText("Debe llenar ambos, carnet y codigo");
                return;
            }
            
            // Validacion 2: Validar que el carnet existe
            Usuario usuario = usuarioDao.obtenerUsuarioXCarnet(carnet);
            if(usuario == null) {
                lblEstado.setText("Carnet no existe");
                return; // aqui termina
            }
            
            // Validacion 3: Validar si el material existe:
        
            Object material = materialExiste(codigo);
            
            if(material == null) {
                lblEstado.setText("Material no existe");
                return; // aqui termina
            } 
            
            // Validacion 4: Validar si el material ya lo tiene prestado
            // Habilitamos el boton de Devolver
            
            
            Prestamo prestamo = prestamoDao.obtenerPrestamo(codigo, usuario.getIdUsuario());
            if(prestamo != null) {
                // validamos si tiene mora:
                Double mora = Utilidades.calcularMora(prestamo);
                if (mora > 0.0) {
                    lblEstado.setText("Material tiene mora! Debe pagar antes!");
                    btnPagarMora.setEnabled(true);
                    btnDevolver.setEnabled(false);
                    llenarFormulario(prestamo, mora);
                } else {
                    lblEstado.setText("Material ya prestado");
                    btnDevolver.setEnabled(true);
                    btnPagarMora.setEnabled(false);
                    llenarFormulario(prestamo, mora);
                }
                return; // aqui termina
            }
            
            // Validacion 5: Validar si el material esta disponible:
            
            boolean materialDisponible = materialDisponible(material);
            if(!materialDisponible) {
                lblEstado.setText("Material no disponible");
                return; // aqui termina
            } 
            
            
            // Validacion 6: Si llega hasta aqui, significa que esta disponible
            // Habilitamos el boton de Prestar
            
            lblEstado.setText("Material disponible");
            btnPrestar.setEnabled(true);
            
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnPagarMoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarMoraActionPerformed
        txtMora.setText("0.0");
        lblEstado.setText("La Mora ha sido cancelada!");
        btnPagarMora.setEnabled(false);
        btnDevolver.setEnabled(true);
    }//GEN-LAST:event_btnPagarMoraActionPerformed

    private void btnDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverActionPerformed
        try {
            Prestamo prestamo = obtenerDesdeFormulario();
            prestamoDao.eliminarPrestamo(prestamo);
            modificarDisponibilidad(prestamo.getCodigo(), 1);
            limpiar();
            lblMensaje.setText("Material devuelto exitosamente!");
        } catch (Exception e) {
                e.printStackTrace();
        }
    }//GEN-LAST:event_btnDevolverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDevolver;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnPagarMora;
    private javax.swing.JButton btnPrestar;
    private com.toedter.calendar.JDateChooser dchFechaDevolucion;
    private com.toedter.calendar.JDateChooser dchFechaPrestamo;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JTextField txtCarnet;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtMora;
    // End of variables declaration//GEN-END:variables
}
